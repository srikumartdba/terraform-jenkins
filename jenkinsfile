pipeline {
    parameters {
        choice(name: 'region', choices: ['us-east-1', 'us-west-1', 'eu-west-1'], description: 'AWS region')
        choice(name: 'ami', choices: ['ami-05fa00d4c63e32376', 'ami-1234567890abcdef'], description: 'AMI ID')
        choice(name: 'instance_type', choices: ['t2.micro', 't2.small', 't2.medium'], description: 'EC2 instance type')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    } 
    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    git "https://github.com/srikumartdba/terraform-jenkins.git"
                }
            }
        }

        stage('Plan') {
            steps {
                dir('terraform/') {
                    script {
                        sh """
                        terraform init
                        terraform plan -out=tfplan -var="region=${params.region}" -var="ami=${params.ami}" -var="instance_type=${params.instance_type}"
                        terraform show -no-color tfplan > tfplan.txt
                        """
                    }
                }
            }
        }

        stage('Approval') {
            when {
                not {
                    equals expected: true, actual: params.autoApprove
                }
            }

            steps {
                script {
                    def plan = readFile 'terraform/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }

        stage('Apply') {
            steps {
                dir('terraform/') {
                    script {
                        sh "terraform apply -input=false ${params.autoApprove ? '-auto-approve' : ''} tfplan"
                    }
                }
            }
        }
    }
}
